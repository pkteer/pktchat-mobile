// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MoreChannels should match snapshot 1`] = `
<RNCSafeAreaView
  style={
    Object {
      "flex": 1,
    }
  }
>
  <Connect(KeyboardLayout)>
    <Connect(StatusBar) />
    <React.Fragment>
      <View
        style={
          Object {
            "height": 38,
            "marginVertical": 5,
          }
        }
        testID="more_channels.screen"
      >
        <Search
          autoCapitalize="none"
          backArrowSize={24}
          backgroundColor="transparent"
          blurOnSubmit={false}
          cancelTitle="Cancel"
          containerHeight={40}
          deleteIconSize={20}
          editable={true}
          inputHeight={33}
          inputStyle={
            Object {
              "backgroundColor": "rgba(63,67,80,0.2)",
              "color": "#3f4350",
              "fontSize": 15,
            }
          }
          keyboardAppearance="light"
          keyboardShouldPersist={false}
          keyboardType="default"
          onBlur={[Function]}
          onCancelButtonPress={[Function]}
          onChangeText={[Function]}
          onSearchButtonPress={[Function]}
          onSelectionChange={[Function]}
          placeholder="Search"
          placeholderTextColor="rgba(63,67,80,0.5)"
          returnKeyType="search"
          searchBarRightMargin={0}
          searchIconSize={24}
          showArrow={false}
          showCancel={true}
          testID="more_channels.search_bar"
          tintColorDelete="rgba(63,67,80,0.5)"
          tintColorSearch="rgba(63,67,80,0.5)"
          titleCancelColor="#3f4350"
          value=""
        />
      </View>
      <View
        testID="more_channels.channel.dropdown"
      >
        <Text
          accessibilityRole="button"
          onPress={[Function]}
          style={
            Object {
              "color": "#3f4350",
              "fontWeight": "bold",
              "marginBottom": 10,
              "marginLeft": 10,
              "marginTop": 20,
            }
          }
          testID="more_channels.channel.dropdown.public"
        >
          Show: Public Channels
            
          <CompassIcon
            name="menu-down"
          />
        </Text>
      </View>
      <CustomList
        canRefresh={false}
        data={
          Array [
            Object {
              "display_name": "display_name",
              "id": "id",
              "name": "name",
            },
          ]
        }
        extraData={true}
        listType="flat"
        loading={true}
        loadingComponent={
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "height": 70,
                "justifyContent": "center",
              }
            }
          >
            <InjectIntl(FormattedText)
              defaultMessage="Loading Channels..."
              id="mobile.loading_channels"
              style={
                Object {
                  "color": "rgba(63,67,80,0.6)",
                }
              }
            />
          </View>
        }
        noResults={null}
        onLoadMore={[Function]}
        onRowPress={[Function]}
        renderItem={[Function]}
        shouldRenderSeparator={true}
        showNoResults={true}
        testID="more_channels.custom_list"
        theme={
          Object {
            "awayIndicator": "#ffbc1f",
            "buttonBg": "#1c58d9",
            "buttonColor": "#ffffff",
            "centerChannelBg": "#ffffff",
            "centerChannelColor": "#3f4350",
            "codeTheme": "github",
            "dndIndicator": "#d24b4e",
            "errorTextColor": "#d24b4e",
            "linkColor": "#386fe5",
            "mentionBg": "#ffffff",
            "mentionColor": "#1e325c",
            "mentionHighlightBg": "#ffd470",
            "mentionHighlightLink": "#1b1d22",
            "newMessageSeparator": "#cc8f00",
            "onlineIndicator": "#3db887",
            "sidebarBg": "#1e325c",
            "sidebarHeaderBg": "#192a4d",
            "sidebarHeaderTextColor": "#ffffff",
            "sidebarTeamBarBg": "#14213e",
            "sidebarText": "#ffffff",
            "sidebarTextActiveBorder": "#5d89ea",
            "sidebarTextActiveColor": "#ffffff",
            "sidebarTextHoverBg": "#28427b",
            "sidebarUnreadText": "#ffffff",
            "type": "Denim",
          }
        }
      />
    </React.Fragment>
  </Connect(KeyboardLayout)>
</RNCSafeAreaView>
`;
